#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.2 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 100 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 1
#"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 11 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 2921 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 283
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname |lab2-Den"
 #"yson Jurgen Mendes Grellert-C|) (read-case-sensitive #t) (teachpacks"
 #" ((lib \"image.rkt\" \"teachpack\" \"2htdp\"))) (htdp-settings #(#t "
 #"constructor repeating-decimal #f #t none #f ((lib \"image.rkt\" \"te"
 #"achpack\" \"2htdp\")) #f)))"
) 0 0 4 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; Nome: Denyson Grellert"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53
#";; Para cada quest\303\243o deve haver pelo menos 2 testes."
0 0 24 29 1 #"\n"
0 0 17 3 52
(
 #";; As fun\303\247\303\265es devem ter"
 #" a documenta\303\247\303\243o completa."
) 0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Use os nomes sugeridos para as fun\303\247\303\265es."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";; Para desenvolver as fun\303\247\303\265es de desenho das cartas, "
 #"voc\303\252 pode usar as fun\303\247\303\265es"
) 0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; de desenho de imagens do pacote \"2htdp/image\" do racket. Descri"
 #"\303\247\303\265es das"
) 0 0 24 29 1 #"\n"
0 0 17 3 51
#";; fun\303\247\303\265es deste pacote podem ser encontradas em:"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; https://docs.racket-lang.org/teachpack/2htdpimage.html"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; Obs: N\303\243o \303\251 para simplesmente copiar uma imagem de u"
 #"ma carta da internet,"
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; a ideia \303\251 voc\303\252 desen"
 #"har a carta usando fun\303\247\303\265es do pacote de imagens."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 17 3 84
(
 #";; Uma propor\303\247\303\243o, taxa, para poder aumentar ou diminui"
 #"r o tamanho de todas imagens"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"width_carta"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 4 #"))  "
0 0 17 3 20 #"; largura das cartas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"height_carta"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"110"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 2 #"))"
0 0 17 3 19 #"; altura das cartas"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"width_inside"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 11 #"width_carta"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 5 #")))  "
0 0 17 3 37 #"; largura da parte interna das cartas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"height_inside"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 12 #"height_carta"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #")))"
0 0 17 3 36 #"; altura da parte interna das cartas"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"width_ellipse"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 4 #"))  "
0 0 17 3 37 #"; largura da elipse que forma a carta"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"height_ellipse"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"45"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #")) "
0 0 17 3 36 #"; altura da elipse que forma a carta"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"width_ellipse_i"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 13 #"width_ellipse"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 5 #")))  "
0 0 17 3 45 #"; largura da elipse interna da carta TrocaCor"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"height_ellipse_i"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 14 #"height_ellipse"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #")))"
0 0 17 3 44 #"; altura da elipse interna da carta TrocaCor"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"cartasCompra4_w"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #")) "
0 0 17 3 58
#"; largura das cartas que formam o desenho da carta Compra4"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"cartasCompra4_h"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #")) "
0 0 17 3 57 #"; altura das cartas que formam o desenho da carta Compra4"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; ================================================================="
 #"======="
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";;                                 QUEST\303\203O 1"
0 0 24 29 1 #"\n"
0 0 17 3 60
(
 #";; Construa uma fun\303\247\303\243o que, dada uma palavra, que pode"
 #" ser"
) 0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; \"azul\", \"verde\", \"amarelo\" ou \"vermelho\", retorna a respe"
 #"ctiva cor"
) 0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; em ingles, ou seja, \"blue\", \"green\", \"yellow\" ou \"red\". S"
 #"e a palavra"
) 0 0 24 29 1 #"\n"
0 0 17 3 49 #";; dada n\303\243o for nenhuma destas, devolve \"black\"."
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; ================================================================="
 #"========"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; cor? : String -> String"
0 0 24 29 1 #"\n"
0 0 17 3 51
#";; Obj: Traduzir a cor do portugu\303\252s para o ingl\303\252s"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;   (cor? \"amarelo\") = \"yellow\""
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;   (cor? \"nada\") = \"black\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cor?"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"azul\""
0 0 24 3 2 #") "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"verde\""
0 0 24 3 2 #") "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"amarelo\""
0 0 24 3 2 #") "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"color"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"vermelho\""
0 0 24 3 2 #") "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cor?"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"amarelo\""
0 0 24 3 2 #") "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cor?"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"preto\""
0 0 24 3 2 #") "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; ================================================================="
 #"======="
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";;                                 QUEST\303\203O 2"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; Construa defini\303\247\303\265es de dados para representar carta"
 #"s de um baralho de UNO."
) 0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; H\303\241 dois tipos de cartas: cartas com n\303\272meros (de 0 a"
 #" 9) e cartas especiais"
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; (que podem ser \"Compra4\", \"Compra2\", \"Inverte\", \"PulaVez\""
 #" e \"TrocaCor\")."
) 0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";; Complete as defini\303\247\303\265es de dados a seguir, e defina "
 #"4 exemplos para cada tipo."
) 0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; ================================================================="
 #"========"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; -----------------"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; TIPO CARTA-NUMERO:"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; -----------------"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 12 #"carta-numero"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cor"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; Um elemento do conjunto Carta-valor \303\251"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;   (make-carta-numero a b)     onde"
0 0 24 29 1 #"\n"
0 0 17 3 89
(
 #";;   a : String, \303\251 a cor da carta, que pode ser \"azul\", \"v"
 #"erde\", \"amarelo\" ou \"vermelho\""
) 0 0 24 29 1 #"\n"
0 0 17 3 55
#";;   b : N\303\272mero, \303\251 o valor da carta, que vai de 0 a 9"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Exemplos de constantes do tipo Carta-numero:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"UmVermelho"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-carta-numero"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"vermelho\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"TresVerde"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-carta-numero"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"verde\""
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"NoveAzul"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-carta-numero"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"azul\""
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"ZeroAmarelo"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-carta-numero"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"amarelo\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; -----------------"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; TIPO CARTA-ESPECIAL:"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; -----------------"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 14 #"carta-especial"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cor"
0 0 24 3 1 #" "
0 0 14 3 4 #"tipo"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Um elemento do conjunto Carta-especial \303\251"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;   (make-carta-especial c d)     onde"
0 0 24 29 1 #"\n"
0 0 17 3 102
(
 #";;   c : String, \303\251 a cor da carta, que pode ser \"azul\", \"v"
 #"erde\", \"amarelo\",  \"vermelho\" ou \"qualquer\""
) 0 0 24 29 1 #"\n"
0 0 17 3 131
(
 #";;   d : String, \303\251 o tipo da carta, que pode ser um dos segui"
 #"ntes valores: \"Compra4\", \"Comp"
 #"ra2\", \"Inverte\", \"PulaVez\" e \"TrocaCor\""
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; Exemplos de constantes do tipo Carta-especial:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"InverteVerde"
0 0 24 3 2 #" ("
0 0 14 3 19 #"make-carta-especial"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"verde\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Inverte\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"Compra4"
0 0 24 3 2 #" ("
0 0 14 3 19 #"make-carta-especial"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"qualquer\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Compra4\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"TrocaCor"
0 0 24 3 2 #" ("
0 0 14 3 19 #"make-carta-especial"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"qualquer\""
0 0 24 3 1 #" "
0 0 19 3 10 #"\"TrocaCor\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"Compra2Azul"
0 0 24 3 2 #" ("
0 0 14 3 19 #"make-carta-especial"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"azul\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Compra2\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; -----------"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; TIPO CARTA:"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; -----------"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Um elemento do conjunto Carta \303\251"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; 1. uma carta-numero;"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; 2. uma carta-especial"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";; Carta \303\251 um tipo misto, cujos elementos podem ser tipo Cart"
 #"a-numero ou tipo Carta-especial."
) 0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";; Dado um elemento do tipo car"
 #"ta, para verificar se a carta \303\251 um n\303\272mero ou especial,"
) 0 0 24 29 1 #"\n"
0 0 17 3 29 #";; pode-se usar as fun\303\247\303\265es:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; carta-numero? : Carta -> Booleano"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; carta-especial?: Carta -> Booleano"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; Por exemplo,"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; (carta-numero? (make-carta-numero \"amarelo\" 3)) devolve #t"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; (carta-especial? (make-carta-numero \"amarelo\" 3)) devolve #f"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; ================================================================="
 #"======="
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";;                                 QUEST\303\203O 3"
0 0 24 29 1 #"\n"
0 0 17 3 62
(
 #";; Construa uma fun\303\247\303\243o que, dada uma carta, devolve su"
 #"a cor."
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; Obs: Note que a carta pode ser um n\303\272mero ou especial, port"
 #"anto deve-se"
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; primeiro testar o tipo de "
 #"carta para saber qual fun\303\247\303\243o usar para obter"
) 0 0 24 29 1 #"\n"
0 0 17 3 62
#";; a cor da carta (carta-numero-cor   ou carta-especial-cor )."
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; ================================================================="
 #"========"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; carta-cor? : carta -> String"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; Obj: Dado uma carta, devolver a cor dela"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;   (carta-cor? carta) = \"blue\""
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;   (carta-cor? carta1) = \"black\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"carta-cor?"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 13 #"carta-numero?"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cor?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"carta-numero-cor"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cor?"
0 0 24 3 2 #" ("
0 0 14 3 18 #"carta-especial-cor"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"carta-cor?"
0 0 24 3 1 #" "
0 0 14 3 12 #"InverteVerde"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"carta-cor?"
0 0 24 3 1 #" "
0 0 14 3 8 #"NoveAzul"
0 0 24 3 2 #") "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; ================================================================="
 #"======="
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";;                                 QUEST\303\203O 4"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; Construa uma fun\303\247\303\243o que, dada uma carta, gera uma i"
 #"magem para esta carta,"
) 0 0 24 29 1 #"\n"
0 0 17 3 42 #";; inspirada nas cartas de um jogo de UNO."
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; ================================================================="
 #"========"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; desenha-base-carta : String -> Imagem"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";; Obj: Dado uma carta, desenha a base dela (que \303\251 igual para"
 #" todas, mudando a cor de fundo apenas)"
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 31 #";(desenha-base-carta \"blue\") = "
0 6           4 17 728
(
 #"(#(struct:overlay #(struct:translate 4 25 #(struct:translate -10.795"
 #"163035453662 51.39218202339926 #(struct:translate 36.98557158514987 "
 #"-19.06088913245535 #(struct:ellipse 70 45 60 255 \"white\")))) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 60 0 0 0) #(struct:pulled-point 0 0 60 110 0"
 #" 0) #(struct:pulled-point 0 0 0 110 0 0)) outline \"black\"))) #(str"
 #"uct:translate 5 5 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(stru"
 #"ct:pulled-point 0 0 50 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)"
 #") 255 \"blue\")))))) #(struct:bb 60.0 110.0 110.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 18 #"desenha-base-carta"
0 0 17 3 1 #" "
0 0 17 3 11 #"\"black\") = "
0 6           4 17 729
(
 #"(#(struct:overlay #(struct:translate 4 25 #(struct:translate -10.795"
 #"163035453662 51.39218202339926 #(struct:translate 36.98557158514987 "
 #"-19.06088913245535 #(struct:ellipse 70 45 60 255 \"white\")))) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 60 0 0 0) #(struct:pulled-point 0 0 60 110 0"
 #" 0) #(struct:pulled-point 0 0 0 110 0 0)) outline \"black\"))) #(str"
 #"uct:translate 5 5 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(stru"
 #"ct:pulled-point 0 0 50 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)"
 #") 255 \"black\")))))) #(struct:bb 60.0 110.0 110.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"desenha-base-carta"
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"overlay/xy"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 14 3 13 #"width_ellipse"
0 0 24 3 1 #" "
0 0 14 3 14 #"height_ellipse"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"-25"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"overlay/xy"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 11 #"width_carta"
0 0 24 3 1 #" "
0 0 14 3 12 #"height_carta"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"outline\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 12 #"width_inside"
0 0 24 3 1 #" "
0 0 14 3 13 #"height_inside"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"desenha-base-carta"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #") "
0 6           4 21 728
(
 #"(#(struct:overlay #(struct:translate 4 25 #(struct:translate -10.795"
 #"163035453662 51.39218202339926 #(struct:translate 36.98557158514987 "
 #"-19.06088913245535 #(struct:ellipse 70 45 60 255 \"white\")))) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 60 0 0 0) #(struct:pulled-point 0 0 60 110 0"
 #" 0) #(struct:pulled-point 0 0 0 110 0 0)) outline \"black\"))) #(str"
 #"uct:translate 5 5 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(stru"
 #"ct:pulled-point 0 0 50 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)"
 #") 255 \"blue\")))))) #(struct:bb 60.0 110.0 110.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"desenha-base-carta"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 2 #") "
0 6           4 21 729
(
 #"(#(struct:overlay #(struct:translate 4 25 #(struct:translate -10.795"
 #"163035453662 51.39218202339926 #(struct:translate 36.98557158514987 "
 #"-19.06088913245535 #(struct:ellipse 70 45 60 255 \"white\")))) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 60 0 0 0) #(struct:pulled-point 0 0 60 110 0"
 #" 0) #(struct:pulled-point 0 0 0 110 0 0)) outline \"black\"))) #(str"
 #"uct:translate 5 5 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(stru"
 #"ct:pulled-point 0 0 50 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)"
 #") 255 \"black\")))))) #(struct:bb 60.0 110.0 110.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; ================================="
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; desenha-carta-numero : carta -> Imagem"
0 0 24 29 1 #"\n"
0 0 17 3 63
(
 #";; Obj: Dado uma carta n\303\272mero, desenha uma imagem dela na tel"
 #"a"
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 1 #"("
0 0 17 3 20 #"desenha-carta-numero"
0 0 17 3 1 #" "
0 0 17 3 12 #"NoveAzul) = "
0 6           4 17 888
(
 #"(#(struct:overlay #(struct:translate 20.5 35.0 #(struct:translate 9."
 #"5 20.0 #(struct:text \"9\" 0 1 \"blue\" 35 #f swiss normal normal #f"
 #"))) #(struct:translate 0 0 #(struct:overlay #(struct:translate 4 25 "
 #"#(struct:translate -10.795163035453662 51.39218202339926 #(struct:tr"
 #"anslate 36.98557158514987 -19.06088913245535 #(struct:ellipse 70 45 "
 #"60 255 \"white\")))) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 60 0 0 0) #(struct"
 #":pulled-point 0 0 60 110 0 0) #(struct:pulled-point 0 0 0 110 0 0)) "
 #"outline \"black\"))) #(struct:translate 5 5 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 100 0 0) #(struct:p"
 #"ulled-point 0 0 0 100 0 0)) 255 \"blue\")))))))) #(struct:bb 60.0 11"
 #"0.0 110.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 1 #"("
0 0 17 3 20 #"desenha-carta-numero"
0 0 17 3 1 #" "
0 0 17 3 13 #"TresVerde) = "
0 6           4 17 890
(
 #"(#(struct:overlay #(struct:translate 20.5 35.0 #(struct:translate 9."
 #"5 20.0 #(struct:text \"3\" 0 1 \"green\" 35 #f swiss normal normal #"
 #"f))) #(struct:translate 0 0 #(struct:overlay #(struct:translate 4 25"
 #" #(struct:translate -10.795163035453662 51.39218202339926 #(struct:t"
 #"ranslate 36.98557158514987 -19.06088913245535 #(struct:ellipse 70 45"
 #" 60 255 \"white\")))) #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 60 0 0 0) #(struc"
 #"t:pulled-point 0 0 60 110 0 0) #(struct:pulled-point 0 0 0 110 0 0))"
 #" outline \"black\"))) #(struct:translate 5 5 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 100 0 0) #(struct:"
 #"pulled-point 0 0 0 100 0 0)) 255 \"green\")))))))) #(struct:bb 60.0 "
 #"110.0 110.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"desenha-carta-numero"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 18 #"carta-numero-valor"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"35"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 10 #"carta-cor?"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 4 #")) ("
0 0 14 3 18 #"desenha-base-carta"
0 0 24 3 2 #" ("
0 0 14 3 10 #"carta-cor?"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"desenha-carta-numero"
0 0 24 3 1 #" "
0 0 14 3 8 #"NoveAzul"
0 0 24 3 2 #") "
0 6           4 21 888
(
 #"(#(struct:overlay #(struct:translate 20.5 35.0 #(struct:translate 9."
 #"5 20.0 #(struct:text \"9\" 0 1 \"blue\" 35 #f swiss normal normal #f"
 #"))) #(struct:translate 0 0 #(struct:overlay #(struct:translate 4 25 "
 #"#(struct:translate -10.795163035453662 51.39218202339926 #(struct:tr"
 #"anslate 36.98557158514987 -19.06088913245535 #(struct:ellipse 70 45 "
 #"60 255 \"white\")))) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 60 0 0 0) #(struct"
 #":pulled-point 0 0 60 110 0 0) #(struct:pulled-point 0 0 0 110 0 0)) "
 #"outline \"black\"))) #(struct:translate 5 5 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 100 0 0) #(struct:p"
 #"ulled-point 0 0 0 100 0 0)) 255 \"blue\")))))))) #(struct:bb 60.0 11"
 #"0.0 110.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"desenha-carta-numero"
0 0 24 3 1 #" "
0 0 14 3 9 #"TresVerde"
0 0 24 3 2 #") "
0 6           4 21 890
(
 #"(#(struct:overlay #(struct:translate 20.5 35.0 #(struct:translate 9."
 #"5 20.0 #(struct:text \"3\" 0 1 \"green\" 35 #f swiss normal normal #"
 #"f))) #(struct:translate 0 0 #(struct:overlay #(struct:translate 4 25"
 #" #(struct:translate -10.795163035453662 51.39218202339926 #(struct:t"
 #"ranslate 36.98557158514987 -19.06088913245535 #(struct:ellipse 70 45"
 #" 60 255 \"white\")))) #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 60 0 0 0) #(struc"
 #"t:pulled-point 0 0 60 110 0 0) #(struct:pulled-point 0 0 0 110 0 0))"
 #" outline \"black\"))) #(struct:translate 5 5 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 100 0 0) #(struct:"
 #"pulled-point 0 0 0 100 0 0)) 255 \"green\")))))))) #(struct:bb 60.0 "
 #"110.0 110.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; ================================="
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; desenha-carta-TrocaCor : carta -> Imagem"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Obj: desenhar a carta troca cor"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Exemplo:"
0 0 24 29 1 #"\n"
0 0 17 3 5 #";;   "
0 0 17 3 1 #"("
0 0 17 3 35 #"desenha-carta-TrocaCor TrocaCor) = "
0 6           4 17 2205
(
 #"(#(struct:overlay #(struct:translate 5 26 #(struct:translate -10.586"
 #"798900513621 50.66437353859658 #(struct:overlay #(struct:overlay #(s"
 #"truct:overlay #(struct:crop (#(struct:point 0.3750000000000001 -0.64"
 #"9519052838329) #(struct:point 17.125000000000004 -29.661370079617022"
 #") #(struct:point 35.31153347947321 -19.161370079617022) #(struct:poi"
 #"nt 18.56153347947321 9.850480947161671)) #(struct:translate 35.31153"
 #"347947321 -19.161370079617022 #(struct:ellipse 67 42 60 255 \"yellow"
 #"\"))) #(struct:crop (#(struct:point 18.186533479473212 10.5000000000"
 #"00002) #(struct:point 35.68653347947321 -19.81088913245535) #(struct"
 #":point 53.873066958946424 -9.31088913245535) #(struct:point 36.37306"
 #"6958946424 21.0)) #(struct:translate 34.93653347947321 -18.511851026"
 #"778693 #(struct:ellipse 67 42 60 255 \"green\")))) #(struct:crop (#("
 #"struct:point 17.500000000000004 -30.31088913245535) #(struct:point 3"
 #"4.25000000000001 -59.322740159234044) #(struct:point 52.436533479473"
 #"22 -48.822740159234044) #(struct:point 35.68653347947321 -19.8108891"
 #"3245535)) #(struct:translate 35.68653347947321 -19.81088913245535 #("
 #"struct:ellipse 67 42 60 255 \"red\")))) #(struct:crop (#(struct:poin"
 #"t 35.68653347947321 -19.81088913245535) #(struct:point 52.4365334794"
 #"7321 -48.822740159234044) #(struct:point 70.62306695894642 -38.32274"
 #"0159234044) #(struct:point 53.873066958946424 -9.310889132455351)) #"
 #"(struct:translate 35.68653347947321 -19.81088913245535 #(struct:elli"
 #"pse 67 42 60 255 \"blue\")))))) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 4 25 #(struct:translate -10.795163035453662 5"
 #"1.39218202339926 #(struct:translate 36.98557158514987 -19.0608891324"
 #"5535 #(struct:ellipse 70 45 60 255 \"white\")))) #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 60 0 0 0) #(struct:pulled-point 0 0 60 110 0 0) #(struct:p"
 #"ulled-point 0 0 0 110 0 0)) outline \"black\"))) #(struct:translate "
 #"5 5 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-poin"
 #"t 0 0 50 100 0 0) #(struct:pulled"
 #"-point 0 0 0 100 0 0)) 255 \"black\")))))))) #(struct:bb 60.0 110.0 "
 #"110.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"desenha-carta-TrocaCor"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"overlay/xy"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 6 #"beside"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"above"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 10 #"crop/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 15 #"width_ellipse_i"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 16 #"height_ellipse_i"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 14 3 15 #"width_ellipse_i"
0 0 24 3 1 #" "
0 0 14 3 16 #"height_ellipse_i"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 10 #"crop/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"bottom\""
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 13 #"width_ellipse"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 16 #"height_ellipse_i"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 14 3 15 #"width_ellipse_i"
0 0 24 3 1 #" "
0 0 14 3 16 #"height_ellipse_i"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             )"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"above"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 10 #"crop/align"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 15 #"width_ellipse_i"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 16 #"height_ellipse_i"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 14 3 15 #"width_ellipse_i"
0 0 24 3 1 #" "
0 0 14 3 16 #"height_ellipse_i"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 10 #"crop/align"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"bottom\""
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 15 #"width_ellipse_i"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 16 #"height_ellipse_i"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 14 3 15 #"width_ellipse_i"
0 0 24 3 1 #" "
0 0 14 3 16 #"height_ellipse_i"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             )"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            )"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"-26"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 18 #"desenha-base-carta"
0 0 24 3 2 #" ("
0 0 14 3 10 #"carta-cor?"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"desenha-carta-TrocaCor"
0 0 24 3 1 #" "
0 0 14 3 8 #"TrocaCor"
0 0 24 3 2 #") "
0 6           4 21 2205
(
 #"(#(struct:overlay #(struct:translate 5 26 #(struct:translate -10.586"
 #"798900513621 50.66437353859658 #(struct:overlay #(struct:overlay #(s"
 #"truct:overlay #(struct:crop (#(struct:point 0.3750000000000001 -0.64"
 #"9519052838329) #(struct:point 17.125000000000004 -29.661370079617022"
 #") #(struct:point 35.31153347947321 -19.161370079617022) #(struct:poi"
 #"nt 18.56153347947321 9.850480947161671)) #(struct:translate 35.31153"
 #"347947321 -19.161370079617022 #(struct:ellipse 67 42 60 255 \"yellow"
 #"\"))) #(struct:crop (#(struct:point 18.186533479473212 10.5000000000"
 #"00002) #(struct:point 35.68653347947321 -19.81088913245535) #(struct"
 #":point 53.873066958946424 -9.31088913245535) #(struct:point 36.37306"
 #"6958946424 21.0)) #(struct:translate 34.93653347947321 -18.511851026"
 #"778693 #(struct:ellipse 67 42 60 255 \"green\")))) #(struct:crop (#("
 #"struct:point 17.500000000000004 -30.31088913245535) #(struct:point 3"
 #"4.25000000000001 -59.322740159234044) #(struct:point 52.436533479473"
 #"22 -48.822740159234044) #(struct:point 35.68653347947321 -19.8108891"
 #"3245535)) #(struct:translate 35.68653347947321 -19.81088913245535 #("
 #"struct:ellipse 67 42 60 255 \"red\")))) #(struct:crop (#(struct:poin"
 #"t 35.68653347947321 -19.81088913245535) #(struct:point 52.4365334794"
 #"7321 -48.822740159234044) #(struct:point 70.62306695894642 -38.32274"
 #"0159234044) #(struct:point 53.873066958946424 -9.310889132455351)) #"
 #"(struct:translate 35.68653347947321 -19.81088913245535 #(struct:elli"
 #"pse 67 42 60 255 \"blue\")))))) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 4 25 #(struct:translate -10.795163035453662 5"
 #"1.39218202339926 #(struct:translate 36.98557158514987 -19.0608891324"
 #"5535 #(struct:ellipse 70 45 60 255 \"white\")))) #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 60 0 0 0) #(struct:pulled-point 0 0 60 110 0 0) #(struct:p"
 #"ulled-point 0 0 0 110 0 0)) outline \"black\"))) #(struct:translate "
 #"5 5 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-poin"
 #"t 0 0 50 100 0 0) #(struct:pulled"
 #"-point 0 0 0 100 0 0)) 255 \"black\")))))))) #(struct:bb 60.0 110.0 "
 #"110.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; ================================="
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; desenha-carta-Compra4 : carta -> Imagem"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; Obj: desenhar a carta compra 4"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Exemplo:"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 1 #"("
0 0 17 3 21 #"desenha-carta-Compra4"
0 0 17 3 1 #" "
0 0 17 3 11 #"Compra4) = "
0 6           4 17 2479
(
 #"(#(struct:overlay #(struct:translate 6 6 #(struct:overlay #(struct:t"
 #"ranslate 0 5 #(struct:overlay #(struct:translate 0 3 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 8 0 0 0) #(struct:pulled-point 0 0 8 2 0 0) #(str"
 #"uct:pulled-point 0 0 0 2 0 0)) 255 \"white\"))) #(struct:translate 3"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 2 0 0 0) #(struct:pulled-point "
 #"0 0 2 8 0 0) #(struct:pulled-point 0 0 0 8 0 0)) 255 \"white\"))))) "
 #"#(struct:translate 10 0 #(struct:translate 4.0 8.5 #(struct:text \"4"
 #"\" 0 1 \"white\" 15 #f swiss normal normal #f))))) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 16.0 30.5 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 13 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 12 0 0 0) #(struct:pulled-point 0 0 1"
 #"2 25 0 0) #(struct:pulled-point 0 0 0 25 0 0)) 255 \"red\"))) #(stru"
 #"ct:translate 8 0 #(struct:overlay #(struct:translate 0 0 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 12 0 0 0) #(struct:pulled-point 0 0 12 25 0 0"
 #") #(struct:pulled-point 0 0 0 25 0 0)) 255 \"blue\"))) #(struct:tran"
 #"slate 8 13 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 12 0 0 0) #(struct:pull"
 #"ed-point 0 0 12 25 0 0) #(struct:pulled-point 0 0 0 25 0 0)) 255 \"g"
 #"reen\"))))))) #(struct:translate 8 24 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 12 0 0 0) #(struct:pulled-point 0 0 12 25 0 0) #(struct:pulled-p"
 #"oint 0 0 0 25 0 0)) 255 \"yellow\"))))) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 4 25 #(struct:translate -10.795163035"
 #"453662 51.39218202339926 #(struct:translate 36.98557158514987 -19.06"
 #"088913245535 #(struct:ellipse 70 45 60 255 \"white\")))) #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 60 0 0 0) #(struct:pulled-point 0 0 60 110 0 0) #("
 #"struct:pulled-point 0 0 0 110 0 0)) outline \"black\"))) #(struct:tr"
 #"anslate 5 5 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pul"
 #"led-point 0 0 50 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) 255 "
 #"\"black\")))))))))) #(struct:bb 60.0 110.0 110.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"desenha-carta-Compra4"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"overlay/xy"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"overlay/xy"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 2 #")("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 2 #")("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 2 #")("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"4\""
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"white\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-6"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-6"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"overlay/xy"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"overlay/xy"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 15 #"cartasCompra4_w"
0 0 24 3 1 #" "
0 0 14 3 15 #"cartasCompra4_h"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"-13"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 10 #"overlay/xy"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 15 #"cartasCompra4_w"
0 0 24 3 1 #" "
0 0 14 3 15 #"cartasCompra4_h"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"13"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 15 #"cartasCompra4_w"
0 0 24 3 1 #" "
0 0 14 3 15 #"cartasCompra4_h"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 15 #"cartasCompra4_w"
0 0 24 3 1 #" "
0 0 14 3 15 #"cartasCompra4_h"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 18 #"desenha-base-carta"
0 0 24 3 2 #" ("
0 0 14 3 10 #"carta-cor?"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ) "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"desenha-carta-Compra4"
0 0 24 3 1 #" "
0 0 14 3 7 #"Compra4"
0 0 24 3 2 #") "
0 6           4 21 2479
(
 #"(#(struct:overlay #(struct:translate 6 6 #(struct:overlay #(struct:t"
 #"ranslate 0 5 #(struct:overlay #(struct:translate 0 3 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 8 0 0 0) #(struct:pulled-point 0 0 8 2 0 0) #(str"
 #"uct:pulled-point 0 0 0 2 0 0)) 255 \"white\"))) #(struct:translate 3"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 2 0 0 0) #(struct:pulled-point "
 #"0 0 2 8 0 0) #(struct:pulled-point 0 0 0 8 0 0)) 255 \"white\"))))) "
 #"#(struct:translate 10 0 #(struct:translate 4.0 8.5 #(struct:text \"4"
 #"\" 0 1 \"white\" 15 #f swiss normal normal #f))))) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 16.0 30.5 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 13 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 12 0 0 0) #(struct:pulled-point 0 0 1"
 #"2 25 0 0) #(struct:pulled-point 0 0 0 25 0 0)) 255 \"red\"))) #(stru"
 #"ct:translate 8 0 #(struct:overlay #(struct:translate 0 0 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 12 0 0 0) #(struct:pulled-point 0 0 12 25 0 0"
 #") #(struct:pulled-point 0 0 0 25 0 0)) 255 \"blue\"))) #(struct:tran"
 #"slate 8 13 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 12 0 0 0) #(struct:pull"
 #"ed-point 0 0 12 25 0 0) #(struct:pulled-point 0 0 0 25 0 0)) 255 \"g"
 #"reen\"))))))) #(struct:translate 8 24 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 12 0 0 0) #(struct:pulled-point 0 0 12 25 0 0) #(struct:pulled-p"
 #"oint 0 0 0 25 0 0)) 255 \"yellow\"))))) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 4 25 #(struct:translate -10.795163035"
 #"453662 51.39218202339926 #(struct:translate 36.98557158514987 -19.06"
 #"088913245535 #(struct:ellipse 70 45 60 255 \"white\")))) #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 60 0 0 0) #(struct:pulled-point 0 0 60 110 0 0) #("
 #"struct:pulled-point 0 0 0 110 0 0)) outline \"black\"))) #(struct:tr"
 #"anslate 5 5 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pul"
 #"led-point 0 0 50 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) 255 "
 #"\"black\")))))))))) #(struct:bb 60.0 110.0 110.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; ================================="
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; desenha-carta-Compra2 : String -> Imagem"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; Obj: Dado a cor da carta, desenhar uma carta compra 2 daquela cor"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Exemplo:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 1 #"("
0 0 17 3 21 #"desenha-carta-Compra2"
0 0 17 3 1 #" "
0 0 17 3 9 #"\"red\") = "
0 6           4 17 2728
(
 #"(#(struct:overlay #(struct:translate 6 6 #(struct:overlay #(struct:t"
 #"ranslate 0 5 #(struct:overlay #(struct:translate 0 3 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 8 0 0 0) #(struct:pulled-point 0 0 8 2 0 0) #(str"
 #"uct:pulled-point 0 0 0 2 0 0)) 255 \"white\"))) #(struct:translate 3"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 2 0 0 0) #(struct:pulled-point "
 #"0 0 2 8 0 0) #(struct:pulled-point 0 0 0 8 0 0)) 255 \"white\"))))) "
 #"#(struct:translate 10 0 #(struct:translate 4.0 8.5 #(struct:text \"2"
 #"\" 0 1 \"white\" 15 #f swiss normal normal #f))))) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 17.0 29.75 #(struct:overla"
 #"y #(struct:translate 0 13 #(struct:overlay #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 18 0) #(struct:point 18 75/2) #(struct:poin"
 #"t 0 75/2)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"18 0 0 0) #(struct:pulled-point 0 0 18 75/2 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 75/2 0 0)) outline #(struct:pen \"black\" 2 solid round rou"
 #"nd))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 18 0 0 0) #(struct:pulled-"
 #"point 0 0 18 75/2 0 0) #(struct:pulled-point 0 0 0 75/2 0 0)) 255 \""
 #"red\")))) #(struct:translate 8 0 #(struct:overlay #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 18 0) #(struct:point 18 75/2) #(stru"
 #"ct:point 0 75/2)) #(struct:translate 0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 18 0 0 0) #(struct:pulled-point 0 0 18 75/2 0 0) #(struct:pul"
 #"led-point 0 0 0 75/2 0 0)) outline #(struct:pen \"black\" 2 solid ro"
 #"und round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pul"
 #"led-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 18 0 0 0) #(struct:"
 #"pulled-point 0 0 18 75/2 0 0) #(struct:pulled-point 0 0 0 75/2 0 0))"
 #" 255 \"red\")))))) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 4 25 #(struct:translate -10.795163035453662 51.39218202339"
 #"926 #(struct:translate 36.98557158514987 -19.06088913245535 #(struct"
 #":ellipse 70 45 60 255 \"white\")))) #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 60 "
 #"0 0 0) #(struct:pulled-point 0 0 60 110 0 0) #(struct:pulled-point 0"
 #" 0 0 110 0 0)) outline \"black\"))) #(struct:translate 5 5 #(struct:"
 #"translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #"
 #"(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 100 "
 #"0 0) #(struct:pulled-point 0 0 0 100 0 0)) 255 \"red\")))))))))) #(s"
 #"truct:bb 60.0 110.0 110.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 1 #"("
0 0 17 3 21 #"desenha-carta-Compra2"
0 0 17 3 1 #" "
0 0 17 3 10 #"\"blue\") = "
0 6           4 17 2731
(
 #"(#(struct:overlay #(struct:translate 6 6 #(struct:overlay #(struct:t"
 #"ranslate 0 5 #(struct:overlay #(struct:translate 0 3 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 8 0 0 0) #(struct:pulled-point 0 0 8 2 0 0) #(str"
 #"uct:pulled-point 0 0 0 2 0 0)) 255 \"white\"))) #(struct:translate 3"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 2 0 0 0) #(struct:pulled-point "
 #"0 0 2 8 0 0) #(struct:pulled-point 0 0 0 8 0 0)) 255 \"white\"))))) "
 #"#(struct:translate 10 0 #(struct:translate 4.0 8.5 #(struct:text \"2"
 #"\" 0 1 \"white\" 15 #f swiss normal normal #f))))) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 17.0 29.75 #(struct:overla"
 #"y #(struct:translate 0 13 #(struct:overlay #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 18 0) #(struct:point 18 75/2) #(struct:poin"
 #"t 0 75/2)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"18 0 0 0) #(struct:pulled-point 0 0 18 75/2 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 75/2 0 0)) outline #(struct:pen \"black\" 2 solid round rou"
 #"nd))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 18 0 0 0) #(struct:pulled-"
 #"point 0 0 18 75/2 0 0) #(struct:pulled-point 0 0 0 75/2 0 0)) 255 \""
 #"blue\")))) #(struct:translate 8 0 #(struct:overlay #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 18 0) #(struct:point 18 75/2) #(str"
 #"uct:point 0 75/2)) #(struct:translate 0 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 18 0 0 0) #(struct:pulled-point 0 0 18 75/2 0 0) #(struct:pu"
 #"lled-point 0 0 0 75/2 0 0)) outline #(struct:pen \"black\" 2 solid r"
 #"ound round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 18 0 0 0) #(struct"
 #":pulled-point 0 0 18 75/2 0 0) #(struct:pulled-point 0 0 0 75/2 0 0)"
 #") 255 \"blue\")))))) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 4 25 #(struct:translate -10.795163035453662 51.392182023"
 #"39926 #(struct:translate 36.98557158514987 -19.06088913245535 #(stru"
 #"ct:ellipse 70 45 60 255 \"white\")))) #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 6"
 #"0 0 0 0) #(struct:pulled-point 0 0 60 110 0 0) #(struct:pulled-point"
 #" 0 0 0 110 0 0)) outline \"black\"))) #(struct:translate 5 5 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 10"
 #"0 0 0) #(struct:pulled-point 0 0 0 100 0 0)) 255 \"blue\")))))))))) "
 #"#(struct:bb 60.0 110.0 110.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"desenha-carta-Compra2"
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"overlay/xy"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"overlay/xy"
0 0 24 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 2 #")("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 2 #")("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 2 #")("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"2\""
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"white\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-6"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"-6"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"overlay/xy"
0 0 24 3 2 #" ("
0 0 14 3 5 #"frame"
0 0 24 3 1 #"("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 15 #"cartasCompra4_w"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 15 #"cartasCompra4_h"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"-13"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 5 #"frame"
0 0 24 3 1 #"("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 15 #"cartasCompra4_w"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 15 #"cartasCompra4_h"
0 0 24 3 1 #" "
0 0 21 3 3 #"1.5"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 18 #"desenha-base-carta"
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"desenha-carta-Compra2"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 2 #") "
0 6           4 21 2734
(
 #"(#(struct:overlay #(struct:translate 6 6 #(struct:overlay #(struct:t"
 #"ranslate 0 5 #(struct:overlay #(struct:translate 0 3 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 8 0 0 0) #(struct:pulled-point 0 0 8 2 0 0) #(str"
 #"uct:pulled-point 0 0 0 2 0 0)) 255 \"white\"))) #(struct:translate 3"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 2 0 0 0) #(struct:pulled-point "
 #"0 0 2 8 0 0) #(struct:pulled-point 0 0 0 8 0 0)) 255 \"white\"))))) "
 #"#(struct:translate 10 0 #(struct:translate 4.0 8.5 #(struct:text \"2"
 #"\" 0 1 \"white\" 15 #f swiss normal normal #f))))) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 17.0 29.75 #(struct:overla"
 #"y #(struct:translate 0 13 #(struct:overlay #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 18 0) #(struct:point 18 75/2) #(struct:poin"
 #"t 0 75/2)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"18 0 0 0) #(struct:pulled-point 0 0 18 75/2 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 75/2 0 0)) outline #(struct:pen \"black\" 2 solid round rou"
 #"nd))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 18 0 0 0) #(struct:pulled-"
 #"point 0 0 18 75/2 0 0) #(struct:pulled-point 0 0 0 75/2 0 0)) 255 \""
 #"green\")))) #(struct:translate 8 0 #(struct:overlay #(struct:crop (#"
 #"(struct:point 0 0) #(struct:point 18 0) #(struct:point 18 75/2) #(st"
 #"ruct:point 0 75/2)) #(struct:translate 0 0 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 18 0 0 0) #(struct:pulled-point 0 0 18 75/2 0 0) #(struct:p"
 #"ulled-point 0 0 0 75/2 0 0)) outline #(struct:pen \"black\" 2 solid "
 #"round round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 18 0 0 0) #(struc"
 #"t:pulled-point 0 0 18 75/2 0 0) #(struct:pulled-point 0 0 0 75/2 0 0"
 #")) 255 \"green\")))))) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 4 25 #(struct:translate -10.795163035453662 51.3921820"
 #"2339926 #(struct:translate 36.98557158514987 -19.06088913245535 #(st"
 #"ruct:ellipse 70 45 60 255 \"white\")))) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 60 0 0 0) #(struct:pulled-point 0 0 60 110 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 110 0 0)) outline \"black\"))) #(struct:translate 5 5 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 "
 #"100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) 255 \"green\"))))))))"
 #")) #(struct:bb 60.0 110.0 110.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"desenha-carta-Compra2"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 2 #") "
0 6           4 21 2737
(
 #"(#(struct:overlay #(struct:translate 6 6 #(struct:overlay #(struct:t"
 #"ranslate 0 5 #(struct:overlay #(struct:translate 0 3 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 8 0 0 0) #(struct:pulled-point 0 0 8 2 0 0) #(str"
 #"uct:pulled-point 0 0 0 2 0 0)) 255 \"white\"))) #(struct:translate 3"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 2 0 0 0) #(struct:pulled-point "
 #"0 0 2 8 0 0) #(struct:pulled-point 0 0 0 8 0 0)) 255 \"white\"))))) "
 #"#(struct:translate 10 0 #(struct:translate 4.0 8.5 #(struct:text \"2"
 #"\" 0 1 \"white\" 15 #f swiss normal normal #f))))) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 17.0 29.75 #(struct:overla"
 #"y #(struct:translate 0 13 #(struct:overlay #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 18 0) #(struct:point 18 75/2) #(struct:poin"
 #"t 0 75/2)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"18 0 0 0) #(struct:pulled-point 0 0 18 75/2 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 75/2 0 0)) outline #(struct:pen \"black\" 2 solid round rou"
 #"nd))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 18 0 0 0) #(struct:pulled-"
 #"point 0 0 18 75/2 0 0) #(struct:pulled-point 0 0 0 75/2 0 0)) 255 \""
 #"yellow\")))) #(struct:translate 8 0 #(struct:overlay #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 18 0) #(struct:point 18 75/2) #(s"
 #"truct:point 0 75/2)) #(struct:translate 0 0 #(struct:translate 0 0 #"
 #"(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-"
 #"point 0 0 18 0 0 0) #(struct:pulled-point 0 0 18 75/2 0 0) #(struct:"
 #"pulled-point 0 0 0 75/2 0 0)) outline #(struct:pen \"black\" 2 solid"
 #" round round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 18 0 0 0) #(stru"
 #"ct:pulled-point 0 0 18 75/2 0 0) #(struct:pulled-point 0 0 0 75/2 0 "
 #"0)) 255 \"yellow\")))))) #(struct:translate 0 0 #(struct:overlay #(s"
 #"truct:translate 4 25 #(struct:translate -10.795163035453662 51.39218"
 #"202339926 #(struct:translate 36.98557158514987 -19.06088913245535 #("
 #"struct:ellipse 70 45 60 255 \"white\")))) #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 60 0 0 0) #(struct:pulled-point 0 0 60 110 0 0) #(struct:pulled-p"
 #"oint 0 0 0 110 0 0)) outline \"black\"))) #(struct:translate 5 5 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 5"
 #"0 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) 255 \"yellow\")))))"
 #"))))) #(struct:bb 60.0 110.0 110.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; ================================="
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; desenha-carta-PulaVez : String -> Imagem"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; Obj: Dada a cor da carta, desenhar a carta Pula Vez dessa cor"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; Exemplo:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; (desenha-carta-PulaVez \"red\") = "
0 6           4 17 1138
(
 #"(#(struct:overlay #(struct:translate 12.0 37.0 #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:line-segment #(struct:point 9 27) #(stru"
 #"ct:point 27 9) #(struct:pen \"red\" 8 solid round round)) #(struct:o"
 #"verlay #(struct:translate 8 8 #(struct:translate 10 10 #(struct:elli"
 #"pse 20 20 0 255 \"white\"))) #(struct:translate 0 0 #(struct:transla"
 #"te 18 18 #(struct:ellipse 36 36 0 255 \"red\"))))))) #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 4 25 #(struct:translate "
 #"-10.795163035453662 51.39218202339926 #(struct:translate 36.98557158"
 #"514987 -19.06088913245535 #(struct:ellipse 70 45 60 255 \"white\")))"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 60 0 0 0) #(struct:pulled-point 0 0 6"
 #"0 110 0 0) #(struct:pulled-point 0 0 0 110 0 0)) outline \"black\"))"
 #") #(struct:translate 5 5 #(struct:translate 0 0 #(struct:polygon (#("
 #"struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0)"
 #" #(struct:pulled-point 0 0 50 100 0 0) #(struct:pulled-point 0 0 0 1"
 #"00 0 0)) 255 \"red\")))))))) #(struct:bb 60.0 110.0 110.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 1 #"("
0 0 17 3 21 #"desenha-carta-PulaVez"
0 0 17 3 1 #" "
0 0 17 3 10 #"\"blue\") = "
0 6           4 17 1141
(
 #"(#(struct:overlay #(struct:translate 12.0 37.0 #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:line-segment #(struct:point 9 27) #(stru"
 #"ct:point 27 9) #(struct:pen \"blue\" 8 solid round round)) #(struct:"
 #"overlay #(struct:translate 8 8 #(struct:translate 10 10 #(struct:ell"
 #"ipse 20 20 0 255 \"white\"))) #(struct:translate 0 0 #(struct:transl"
 #"ate 18 18 #(struct:ellipse 36 36 0 255 \"blue\"))))))) #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 4 25 #(struct:translat"
 #"e -10.795163035453662 51.39218202339926 #(struct:translate 36.985571"
 #"58514987 -19.06088913245535 #(struct:ellipse 70 45 60 255 \"white\")"
 #"))) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 60 0 0 0) #(struct:pulled-point 0 0"
 #" 60 110 0 0) #(struct:pulled-point 0 0 0 110 0 0)) outline \"black\""
 #"))) #(struct:translate 5 5 #(struct:translate 0 0 #(struct:polygon ("
 #"#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 "
 #"0) #(struct:pulled-point 0 0 50 100 0 0) #(struct:pulled-point 0 0 0"
 #" 100 0 0)) 255 \"blue\")))))))) #(struct:bb 60.0 110.0 110.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"desenha-carta-PulaVez"
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 8 #"add-line"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 3 #") ("
0 0 14 3 6 #"circle"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     )"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"27"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"27"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 8 #"make-pen"
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"round\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"round\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 18 #"desenha-base-carta"
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"desenha-carta-PulaVez"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #") "
0 6           4 21 1141
(
 #"(#(struct:overlay #(struct:translate 12.0 37.0 #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:line-segment #(struct:point 9 27) #(stru"
 #"ct:point 27 9) #(struct:pen \"blue\" 8 solid round round)) #(struct:"
 #"overlay #(struct:translate 8 8 #(struct:translate 10 10 #(struct:ell"
 #"ipse 20 20 0 255 \"white\"))) #(struct:translate 0 0 #(struct:transl"
 #"ate 18 18 #(struct:ellipse 36 36 0 255 \"blue\"))))))) #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 4 25 #(struct:translat"
 #"e -10.795163035453662 51.39218202339926 #(struct:translate 36.985571"
 #"58514987 -19.06088913245535 #(struct:ellipse 70 45 60 255 \"white\")"
 #"))) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 "
 #"0 0 0) #(struct:pulled-point 0 0 60 0 0 0) #(struct:pulled-point 0 0"
 #" 60 110 0 0) #(struct:pulled-point 0 0 0 110 0 0)) outline \"black\""
 #"))) #(struct:translate 5 5 #(struct:translate 0 0 #(struct:polygon ("
 #"#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 "
 #"0) #(struct:pulled-point 0 0 50 100 0 0) #(struct:pulled-point 0 0 0"
 #" 100 0 0)) 255 \"blue\")))))))) #(struct:bb 60.0 110.0 110.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"desenha-carta-PulaVez"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 2 #") "
0 6           4 21 1147
(
 #"(#(struct:overlay #(struct:translate 12.0 37.0 #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:line-segment #(struct:point 9 27) #(stru"
 #"ct:point 27 9) #(struct:pen \"yellow\" 8 solid round round)) #(struc"
 #"t:overlay #(struct:translate 8 8 #(struct:translate 10 10 #(struct:e"
 #"llipse 20 20 0 255 \"white\"))) #(struct:translate 0 0 #(struct:tran"
 #"slate 18 18 #(struct:ellipse 36 36 0 255 \"yellow\"))))))) #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 4 25 #(struct:tran"
 #"slate -10.795163035453662 51.39218202339926 #(struct:translate 36.98"
 #"557158514987 -19.06088913245535 #(struct:ellipse 70 45 60 255 \"whit"
 #"e\")))) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 60 0 0 0) #(struct:pulled-point"
 #" 0 0 60 110 0 0) #(struct:pulled-point 0 0 0 110 0 0)) outline \"bla"
 #"ck\"))) #(struct:translate 5 5 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 "
 #"0 0 0) #(struct:pulled-point 0 0 50 100 0 0) #(struct:pulled-point 0"
 #" 0 0 100 0 0)) 255 \"yellow\")))))))) #(struct:bb 60.0 110.0 110.0) "
 #"#f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; ================================="
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; desenha-carta-Inverte : String -> Imagem"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; Obj: Dado a cor da carta, desenhar a carta Inverte"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; (desenha-carta-Inverte \"red\") = "
0 6           4 17 2704
(
 #"(#(struct:overlay #(struct:translate 19.499999999999993 28.813466520"
 #"526788 #(struct:translate -13.856406460551018 44.373066958946424 #(s"
 #"truct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(s"
 #"truct:overlay #(struct:crop (#(struct:point 14.464101615137757 -17.0"
 #"5255888325765) #(struct:point 18.464101615137757 -23.98076211353316)"
 #" #(struct:point 25.392304845413264 -19.98076211353316) #(struct:poin"
 #"t 21.392304845413264 -13.052558883257651)) #(struct:translate 25.392"
 #"304845413268 -19.980762113533153 "
 #"#(struct:ellipse 16 16 0 255 \"red\"))) #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 18.464101615137757 -23.980762113533157 0 0) #(struct"
 #":pulled-point 0 0 24.464101615137757 -34.373066958946424 0 0) #(stru"
 #"ct:pulled-point 0 0 31.392304845413264 -30.373066958946424 0 0) #(st"
 #"ruct:pulled-point 0 0 25.392304845413264 -19.98076211353316 0 0)) 25"
 #"5 \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 21.000000000"
 #"000004 -36.373066958946424 0 0) #(struct:pulled-point 0 0 34.8564064"
 #"6055102 -28.373066958946424 0 0) #(struct:pulled-point 0 0 34.856406"
 #"46055103 -44.373066958946424 0 0)) 255 \"red\")) #(struct:crop (#(st"
 #"ruct:point 34.248711305964285 -19.32050807568877) #(struct:point 30."
 #"248711305964285 -12.392304845413262) #(struct:point 23.3205080756887"
 #"78 -16.392304845413264) #(struct:point 27.320508075688778 -23.320508"
 #"07568877)) #(struct:translate 23.320508075688778 -16.392304845413264"
 #" #(struct:ellipse 16 16 0 255 \"red\")))) #(struct:polygon (#(struct"
 #":pulled-point 0 0 30.248711305964285 -12.392304845413262 0 0) #(stru"
 #"ct:pulled-point 0 0 24.248711305964285 -1.9999999999999982 0 0) #(st"
 #"ruct:pulled-point 0 0 17.320508075688778 -5.999999999999999 0 0) #(s"
 #"truct:pulled-point 0 0 23.320508075688778 -16.392304845413264 0 0)) "
 #"255 \"red\")) #(struct:polygon (#(struct:pulled-point 0 0 27.7128129"
 #"21102042 1.7763568394002505e-015 0 0) #(struct:pulled-point 0 0 13.8"
 #"56406460551025 -8.0 0 0) #(struct:pulled-point 0 0 13.85640646055101"
 #"8 8.0 0 0)) 255 \"red\")))) #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 4 25 #(struct:translate -10.795163035453662 51.39"
 #"218202339926 #(struct:translate 36.98557158514987 -19.06088913245535"
 #" #(struct:ellipse 70 45 60 255 \"white\")))) #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 60 0 0 0) #(struct:pulled-point 0 0 60 110 0 0) #(struct:pulle"
 #"d-point 0 0 0 110 0 0)) outline \"black\"))) #(struct:translate 5 5 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 "
 #"0 50 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) 255 \"red\")))))"
 #"))) #(struct:bb 60.0 110.0 110.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 37 #";; (desenha-carta-Inverte \"green\") = "
0 6           4 17 2718
(
 #"(#(struct:overlay #(struct:translate 19.499999999999993 28.813466520"
 #"526788 #(struct:translate -13.856406460551018 44.373066958946424 #(s"
 #"truct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(s"
 #"truct:overlay #(struct:crop (#(struct:point 14.464101615137757 -17.0"
 #"5255888325765) #(struct:point 18.464101615137757 -23.98076211353316)"
 #" #(struct:point 25.392304845413264 -19.98076211353316) #(struct:poin"
 #"t 21.392304845413264 -13.052558883257651)) #(struct:translate 25.392"
 #"304845413268 -19.980762113533153 #(struct:ellipse 16 16 0 255 \"gree"
 #"n\"))) #(struct:polygon (#(struct:pulled-point 0 0 18.46410161513775"
 #"7 -23.980762113533157 0 0) #(struct:pulled-point 0 0 24.464101615137"
 #"757 -34.373066958946424 0 0) #(struct:pulled-point 0 0 31.3923048454"
 #"13264 -30.373066958946424 0 0) #(struct:pulled-point 0 0 25.39230484"
 #"5413264 -19.98076211353316 0 0)) 255 \"green\")) #(struct:polygon (#"
 #"(struct:pulled-point 0 0 21.000000000000004 -36.373066958946424 0 0)"
 #" #(struct:pulled-point 0 0 34.85640646055102 -28.373066958946424 0 0"
 #") #(struct:pulled-point 0 0 34.85640646055103 -44.373066958946424 0 "
 #"0)) 255 \"green\")) #(struct:crop (#(struct:point 34.248711305964285"
 #" -19.32050807568877) #(struct:point 30.248711305964285 -12.392304845"
 #"413262) #(struct:point 23.320508075688778 -16.392304845413264) #(str"
 #"uct:point 27.320508075688778 -23.32050807568877)) #(struct:translate"
 #" 23.320508075688778 -16.392304845413264 #(struct:ellipse 16 16 0 255"
 #" \"green\")))) #(struct:polygon (#(struct:pulled-point 0 0 30.248711"
 #"305964285 -12.392304845413262 0 0) #(struct:pulled-point 0 0 24.2487"
 #"11305964285 -1.9999999999999982 0 0) #(struct:pulled-point 0 0 17.32"
 #"0508075688778 -5.999999999999999 0 0) #(struct:pulled-point 0 0 23.3"
 #"20508075688778 -16.392304845413264 0 0)) 255 \"green\")) #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 27.712812921102042 1.77635683940025"
 #"05e-015 0 0) #(struct:pulled-point 0 0 13.856406460551025 -8.0 0 0) "
 #"#(struct:pulled-point 0 0 13.856406460551018 8.0 0 0)) 255 \"green\""
 #")))) #(struct:translate 0 0 #(struct:overlay #(struct:translate 4 25"
 #" #(struct:translate -10.795163035453662 51.39218202339926 #(struct:t"
 #"ranslate 36.98557158514987 -19.06088913245535 #(struct:ellipse 70 45"
 #" 60 255 \"white\")))) #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 60 0 0 0) #(struc"
 #"t:pulled-point 0 0 60 110 0 0) #(struct:pulled-point 0 0 0 110 0 0))"
 #" outline \"black\"))) #(struct:translate 5 5 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 100 0 0) #(struct:"
 #"pulled-point 0 0 0 100 0 0)) 255 \"green\")))))))) #(struct:bb 60.0 "
 #"110.0 110.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"desenha-carta-Inverte"
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 10 #"overlay/xy"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"beside"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"beside"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"crop/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 3 #"270"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             )"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 3 #"-22"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 13 #"flip-vertical"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 15 #"flip-horizontal"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 6 #"beside"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"beside"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"crop/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"top\""
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 6 #"circle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"rotate"
0 0 24 3 1 #" "
0 0 21 3 3 #"270"
0 0 24 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 1 #" "
0 0 14 3 5 #"ratio"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               )"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              )"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             )"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            )"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 18 #"desenha-base-carta"
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"desenha-carta-Inverte"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 24 3 2 #") "
0 6           4 21 2711
(
 #"(#(struct:overlay #(struct:translate 19.499999999999993 28.813466520"
 #"526788 #(struct:translate -13.856406460551018 44.373066958946424 #(s"
 #"truct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(s"
 #"truct:overlay #(struct:crop (#(struct:point 14.464101615137757 -17.0"
 #"5255888325765) #(struct:point 18.464101615137757 -23.98076211353316)"
 #" #(struct:point 25.392304845413264 -19.98076211353316) #(struct:poin"
 #"t 21.392304845413264 -13.052558883257651)) #(struct:translate 25.392"
 #"304845413268 -19.980762113533153 #(struct:ellipse 16 16 0 255 \"blue"
 #"\"))) #(struct:polygon (#(struct:pulled-point 0 0 18.464101615137757"
 #" -23.980762113533157 0 0) #(struct:pulled-point 0 0 24.4641016151377"
 #"57 -34.373066958946424 0 0) #(struct:pulled-point 0 0 31.39230484541"
 #"3264 -30.373066958946424 0 0) #(struct:pulled-point 0 0 25.392304845"
 #"413264 -19.98076211353316 0 0)) 255 \"blue\")) #(struct:polygon (#(s"
 #"truct:pulled-point 0 0 21.000000000000004 -36.373066958946424 0 0) #"
 #"(struct:pulled-point 0 0 34.85640646055102 -28.373066958946424 0 0) "
 #"#(struct:pulled-point 0 0 34.85640646055103 -44.373066958946424 0 0)"
 #") 255 \"blue\")) #(struct:crop (#(struct:point 34.248711305964285 -1"
 #"9.32050807568877) #(struct:point 30.248711305964285 -12.392304845413"
 #"262) #(struct:point 23.320508075688778 -16.392304845413264) #(struct"
 #":point 27.320508075688778 -23.32050807568877)) #(struct:translate 23"
 #".320508075688778 -16.392304845413264 #(struct:ellipse 16 16 0 255 \""
 #"blue\")))) #(struct:polygon (#(struct:pulled-point 0 0 30.2487113059"
 #"64285 -12.392304845413262 0 0) #(struct:pulled-point 0 0 24.24871130"
 #"5964285 -1.9999999999999982 0 0) #(struct:pulled-point 0 0 17.320508"
 #"075688778 -5.999999999999999 0 0) #(struct:pulled-point 0 0 23.32050"
 #"8075688778 -16.392304845413264 0 0)) 255 \"blue\")) #(struct:polygon"
 #" (#(struct:pulled-point 0 0 27.712812921102042 1.7763568394002505e-0"
 #"15 0 0) #(struct:pulled-point 0 0 13.856406460551025 -8.0 0 0) #(str"
 #"uct:pulled-point 0 0 13.856406460551018 8.0 0 0)) 255 \"blue\")))) #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 4 25 #(str"
 #"uct:translate -10.795163035453662 51.39218202339926 #(struct:transla"
 #"te 36.98557158514987 -19.06088913245535 #(struct:ellipse 70 45 60 25"
 #"5 \"white\")))) #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 60 0 0 0) #(struct:pull"
 #"ed-point 0 0 60 110 0 0) #(struct:pulled-point 0 0 0 110 0 0)) outli"
 #"ne \"black\"))) #(struct:translate 5 5 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 100 0 0) #(struct:pulled"
 #"-point 0 0 0 100 0 0)) 255 \"blue\")))))))) #(struct:bb 60.0 110.0 1"
 #"10.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"desenha-carta-Inverte"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 24 3 2 #") "
0 6           4 21 2725
(
 #"(#(struct:overlay #(struct:translate 19.499999999999993 28.813466520"
 #"526788 #(struct:translate -13.856406460551018 44.373066958946424 #(s"
 #"truct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(s"
 #"truct:overlay #(struct:crop (#(struct:point 14.464101615137757 -17.0"
 #"5255888325765) #(struct:point 18.464101615137757 -23.98076211353316)"
 #" #(struct:point 25.392304845413264 -19.98076211353316) #(struct:poin"
 #"t 21.392304845413264 -13.052558883257651)) #(struct:translate 25.392"
 #"304845413268 -19.980762113533153 #(struct:ellipse 16 16 0 255 \"yell"
 #"ow\"))) #(struct:polygon (#(struct:pulled-point 0 0 18.4641016151377"
 #"57 -23.980762113533157 0 0) #(struct:pulled-point 0 0 24.46410161513"
 #"7757 -34.373066958946424 0 0) #(struct:pulled-point 0 0 31.392304845"
 #"413264 -30.373066958946424 0 0) #(struct:pulled-point 0 0 25.3923048"
 #"45413264 -19.98076211353316 0 0)) 255 \"yellow\")) #(struct:polygon "
 #"(#(struct:pulled-point 0 0 21.000000000000004 -36.373066958946424 0 "
 #"0) #(struct:pulled-point 0 0 34.85640646055102 -28.373066958946424 0"
 #" 0) #(struct:pulled-point 0 0 34.85640646055103 -44.373066958946424 "
 #"0 0)) 255 \"yellow\")) #(struct:crop (#(struct:point 34.248711305964"
 #"285 -19.32050807568877) #(struct:point 30.248711305964285 -12.392304"
 #"845413262) #(struct:point 23.320508075688778 -16.392304845413264) #("
 #"struct:point 27.320508075688778 -23.32050807568877)) #(struct:transl"
 #"ate 23.320508075688778 -16.392304845413264 #(struct:ellipse 16 16 0 "
 #"255 \"yellow\")))) #(struct:polygon (#(struct:pulled-point 0 0 30.24"
 #"8711305964285 -12.392304845413262 0 0) #(struct:pulled-point 0 0 24."
 #"248711305964285 -1.9999999999999982 0 0) #(struct:pulled-point 0 0 1"
 #"7.320508075688778 -5.999999999999999 0 0) #(struct:pulled-point 0 0 "
 #"23.320508075688778 -16.392304845413264 0 0)) 255 \"yellow\")) #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 27.712812921102042 1.776356839"
 #"4002505e-015 0 0) #(struct:pulled-point 0 0 13.856406460551025 -8.0 "
 #"0 0) #(struct:pulled-point 0 0 13.856406460551018 8.0 0 0)) 255 \"ye"
 #"llow\")))) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 4 25 #(struct:translate -10.795163035453662 51.39218202339926 #(st"
 #"ruct:translate 36.98557158514987 -19.06088913245535 #(struct:ellipse"
 #" 70 45 60 255 \"white\")))) #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 60 0 0 0) #"
 #"(struct:pulled-point 0 0 60 110 0 0) #(struct:pulled-point 0 0 0 110"
 #" 0 0)) outline \"black\"))) #(struct:translate 5 5 #(struct:translat"
 #"e 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:"
 #"pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 100 0 0) #(s"
 #"truct:pulled-point 0 0 0 100 0 0)) 255 \"yellow\")))))))) #(struct:b"
 #"b 60.0 110.0 110.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; ================================="
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; mostra-carta : carta -> Imagem"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; Obj: A partir dos dados de uma carta, devolver a imagem dela"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; (mostra-carta InverteVerde) ="
0 6           4 17 2718
(
 #"(#(struct:overlay #(struct:translate 19.499999999999993 28.813466520"
 #"526788 #(struct:translate -13.856406460551018 44.373066958946424 #(s"
 #"truct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(s"
 #"truct:overlay #(struct:crop (#(struct:point 14.464101615137757 -17.0"
 #"5255888325765) #(struct:point 18.464101615137757 -23.98076211353316)"
 #" #(struct:point 25.392304845413264 -19.98076211353316) #(struct:poin"
 #"t 21.392304845413264 -13.052558883257651)) #(struct:translate 25.392"
 #"304845413268 -19.980762113533153 #(struct:ellipse 16 16 0 255 \"gree"
 #"n\"))) #(struct:polygon (#(struct:pulled-point 0 0 18.46410161513775"
 #"7 -23.980762113533157 0 0) #(struct:pulled-point 0 0 24.464101615137"
 #"757 -34.373066958946424 0 0) #(struct:pulled-point 0 0 31.3923048454"
 #"13264 -30.373066958946424 0 0) #(struct:pulled-point 0 0 25.39230484"
 #"5413264 -19.98076211353316 0 0)) 255 \"green\")) #(struct:polygon (#"
 #"(struct:pulled-point 0 0 21.000000000000004 -36.373066958946424 0 0)"
 #" #(struct:pulled-point 0 0 34.85640646055102 -28.373066958946424 0 0"
 #") #(struct:pulled-point 0 0 34.85640646055103 -44.373066958946424 0 "
 #"0)) 255 \"green\")) #(struct:crop (#(struct:point 34.248711305964285"
 #" -19.32050807568877) #(struct:point 30.248711305964285 -12.392304845"
 #"413262) #(struct:point 23.320508075688778 -16.392304845413264) #(str"
 #"uct:point 27.320508075688778 -23.32050807568877)) #(struct:translate"
 #" 23.320508075688778 -16.392304845413264 #(struct:ellipse 16 16 0 255"
 #" \"green\")))) #(struct:polygon (#(struct:pulled-point 0 0 30.248711"
 #"305964285 -12.392304845413262 0 0) #(struct:pulled-point 0 0 24.2487"
 #"11305964285 -1.9999999999999982 0 0) #(struct:pulled-point 0 0 17.32"
 #"0508075688778 -5.999999999999999 0 0) #(struct:pulled-point 0 0 23.3"
 #"20508075688778 -16.392304845413264 0 0)) 255 \"green\")) #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 27.712812921102042 1.77635683940025"
 #"05e-015 0 0) #(struct:pulled-point 0 0 13.856406460551025 -8.0 0 0) "
 #"#(struct:pulled-point 0 0 13.856406460551018 8.0 0 0)) 255 \"green\""
 #")))) #(struct:translate 0 0 #(struct:overlay #(struct:translate 4 25"
 #" #(struct:translate -10.795163035453662 51.39218202339926 #(struct:t"
 #"ranslate 36.98557158514987 -19.06088913245535 #(struct:ellipse 70 45"
 #" 60 255 \"white\")))) #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 60 0 0 0) #(struc"
 #"t:pulled-point 0 0 60 110 0 0) #(struct:pulled-point 0 0 0 110 0 0))"
 #" outline \"black\"))) #(struct:translate 5 5 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled"
 #"-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 100 0 0) #(struct:"
 #"pulled-point 0 0 0 100 0 0)) 255 \"green\")))))))) #(struct:bb 60.0 "
 #"110.0 110.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 52 #";; (mostra-carta (make-carta-numero \"amarelo\" 5)) = "
0 6           4 17 892
(
 #"(#(struct:overlay #(struct:translate 20.5 35.0 #(struct:translate 9."
 #"5 20.0 #(struct:text \"5\" 0 1 \"yellow\" 35 #f swiss normal normal "
 #"#f))) #(struct:translate 0 0 #(struct:overlay #(struct:translate 4 2"
 #"5 #(struct:translate -10.795163035453662 51.39218202339926 #(struct:"
 #"translate 36.98557158514987 -19.06088913245535 #(struct:ellipse 70 4"
 #"5 60 255 \"white\")))) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 60 0 0 0) #(stru"
 #"ct:pulled-point 0 0 60 110 0 0) #(struct:pulled-point 0 0 0 110 0 0)"
 #") outline \"black\"))) #(struct:translate 5 5 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 100 0 0) #(struct"
 #":pulled-point 0 0 0 100 0 0)) 255 \"yellow\")))))))) #(struct:bb 60."
 #"0 110.0 110.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mostra-carta"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 13 #"carta-numero?"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 3 #") ("
0 0 14 3 20 #"desenha-carta-numero"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 2 #") "
0 0 19 3 9 #"\"Inverte\""
0 0 24 3 3 #") ("
0 0 14 3 21 #"desenha-carta-Inverte"
0 0 24 3 2 #" ("
0 0 14 3 10 #"carta-cor?"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 2 #") "
0 0 19 3 9 #"\"PulaVez\""
0 0 24 3 3 #") ("
0 0 14 3 21 #"desenha-carta-PulaVez"
0 0 24 3 2 #" ("
0 0 14 3 10 #"carta-cor?"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 2 #") "
0 0 19 3 9 #"\"Compra2\""
0 0 24 3 3 #") ("
0 0 14 3 21 #"desenha-carta-Compra2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"carta-cor?"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 2 #") "
0 0 19 3 9 #"\"Compra4\""
0 0 24 3 3 #") ("
0 0 14 3 21 #"desenha-carta-Compra4"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"TrocaCor\""
0 0 24 3 3 #") ("
0 0 14 3 22 #"desenha-carta-TrocaCor"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            )]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mostra-carta"
0 0 24 3 1 #" "
0 0 14 3 7 #"Compra4"
0 0 24 3 2 #") "
0 6           4 21 2479
(
 #"(#(struct:overlay #(struct:translate 6 6 #(struct:overlay #(struct:t"
 #"ranslate 0 5 #(struct:overlay #(struct:translate 0 3 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 8 0 0 0) #(struct:pulled-point 0 0 8 2 0 0) #(str"
 #"uct:pulled-point 0 0 0 2 0 0)) 255 \"white\"))) #(struct:translate 3"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 2 0 0 0) #(struct:pulled-point "
 #"0 0 2 8 0 0) #(struct:pulled-point 0 0 0 8 0 0)) 255 \"white\"))))) "
 #"#(struct:translate 10 0 #(struct:translate 4.0 8.5 #(struct:text \"4"
 #"\" 0 1 \"white\" 15 #f swiss normal normal #f))))) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 16.0 30.5 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 13 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 12 0 0 0) #(struct:pulled-point 0 0 1"
 #"2 25 0 0) #(struct:pulled-point 0 0 0 25 0 0)) 255 \"red\"))) #(stru"
 #"ct:translate 8 0 #(struct:overlay #(struct:translate 0 0 #(struct:tr"
 #"anslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(s"
 #"truct:pulled-point 0 0 12 0 0 0) #(struct:pulled-point 0 0 12 25 0 0"
 #") #(struct:pulled-point 0 0 0 25 0 0)) 255 \"blue\"))) #(struct:tran"
 #"slate 8 13 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-"
 #"point 0 0 0 0 0 0) #(struct:pulled-point 0 0 12 0 0 0) #(struct:pull"
 #"ed-point 0 0 12 25 0 0) #(struct:pulled-point 0 0 0 25 0 0)) 255 \"g"
 #"reen\"))))))) #(struct:translate 8 24 #(struct:translate 0 0 #(struc"
 #"t:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point "
 #"0 0 12 0 0 0) #(struct:pulled-point 0 0 12 25 0 0) #(struct:pulled-p"
 #"oint 0 0 0 25 0 0)) 255 \"yellow\"))))) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 4 25 #(struct:translate -10.795163035"
 #"453662 51.39218202339926 #(struct:translate 36.98557158514987 -19.06"
 #"088913245535 #(struct:ellipse 70 45 60 255 \"white\")))) #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 60 0 0 0) #(struct:pulled-point 0 0 60 110 0 0) #("
 #"struct:pulled-point 0 0 0 110 0 0)) outline \"black\"))) #(struct:tr"
 #"anslate 5 5 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled"
 #"-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 50 0 0 0) #(struct:pul"
 #"led-point 0 0 50 100 0 0) #(struct:pulled-point 0 0 0 100 0 0)) 255 "
 #"\"black\")))))))))) #(struct:bb 60.0 110.0 110.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mostra-carta"
0 0 24 3 1 #" "
0 0 14 3 11 #"Compra2Azul"
0 0 24 3 2 #") "
0 6           4 21 2731
(
 #"(#(struct:overlay #(struct:translate 6 6 #(struct:overlay #(struct:t"
 #"ranslate 0 5 #(struct:overlay #(struct:translate 0 3 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 8 0 0 0) #(struct:pulled-point 0 0 8 2 0 0) #(str"
 #"uct:pulled-point 0 0 0 2 0 0)) 255 \"white\"))) #(struct:translate 3"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 2 0 0 0) #(struct:pulled-point "
 #"0 0 2 8 0 0) #(struct:pulled-point 0 0 0 8 0 0)) 255 \"white\"))))) "
 #"#(struct:translate 10 0 #(struct:translate 4.0 8.5 #(struct:text \"2"
 #"\" 0 1 \"white\" 15 #f swiss normal normal #f))))) #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 17.0 29.75 #(struct:overla"
 #"y #(struct:translate 0 13 #(struct:overlay #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 18 0) #(struct:point 18 75/2) #(struct:poin"
 #"t 0 75/2)) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"18 0 0 0) #(struct:pulled-point 0 0 18 75/2 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 75/2 0 0)) outline #(struct:pen \"black\" 2 solid round rou"
 #"nd))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 18 0 0 0) #(struct:pulled-"
 #"point 0 0 18 75/2 0 0) #(struct:pulled-point 0 0 0 75/2 0 0)) 255 \""
 #"blue\")))) #(struct:translate 8 0 #(struct:overlay #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 18 0) #(struct:point 18 75/2) #(str"
 #"uct:point 0 75/2)) #(struct:translate 0 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-po"
 #"int 0 0 18 0 0 0) #(struct:pulled-point 0 0 18 75/2 0 0) #(struct:pu"
 #"lled-point 0 0 0 75/2 0 0)) outline #(struct:pen \"black\" 2 solid r"
 #"ound round))))) #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 18 0 0 0) #(struct"
 #":pulled-point 0 0 18 75/2 0 0) #(struct:pulled-point 0 0 0 75/2 0 0)"
 #") 255 \"blue\")))))) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 4 25 #(struct:translate -10.795163035453662 51.392182023"
 #"39926 #(struct:translate 36.98557158514987 -19.06088913245535 #(stru"
 #"ct:ellipse 70 45 60 255 \"white\")))) #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 6"
 #"0 0 0 0) #(struct:pulled-point 0 0 60 110 0 0) #(struct:pulled-point"
 #" 0 0 0 110 0 0)) outline \"black\"))) #(struct:translate 5 5 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 10"
 #"0 0 0) #(struct:pulled-point 0 0 0 100 0 0)) 255 \"blue\")))))))))) "
 #"#(struct:bb 60.0 110.0 110.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; ================================================================="
 #"======="
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";;                                 QUEST\303\203O 5"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; Desenvolva uma fun\303\247\303\243o que, dadas duas cartas, a car"
 #"ta da mesa e a da m\303\243o,"
) 0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; nesta ordem, diz se \303\251 p"
 #"oss\303\255vel jogar a carta da m\303\243o de acordo com as regras"
) 0 0 24 29 1 #"\n"
0 0 17 3 44 #";; do jogo Uno. (pesquise as regras de UNO)."
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; Assuma que, se a carta da mesa for uma carta especial colorida, u"
 #"ma carta"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; de qualquer cor pode ser jogada. Se a carta for especial de algum"
 #"a cor,"
) 0 0 24 29 1 #"\n"
0 0 17 3 58
#";; deve ser jogada uma carta desta cor (ou do mesmo tipo)."
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; ================================================================="
 #"========"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; pode-jogar? : carta carta -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; Obj: Dado duas cartas, de acordo com as regras do jogo Uno, dizer"
 #" se pode"
) 0 0 24 29 1 #"\n"
0 0 17 3 33 #";; ou n\303\243o jogar a carta da m\303\243o."
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; (pode-jogar? Compra2Azul InverteVerde) = #f"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; (pode-jogar? Compra4 ZeroAmarelo) = #t"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"pode-jogar?"
0 0 24 3 1 #" "
0 0 14 3 9 #"cartaMesa"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 13 #"carta-numero?"
0 0 24 3 1 #" "
0 0 14 3 9 #"cartaMesa"
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 87
(
 #"                                                                    "
 #"                   "
) 0 0 17 3 24 #";;carta n\303\272mero na mesa "
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"carta-cor?"
0 0 24 3 1 #" "
0 0 14 3 9 #"cartaMesa"
0 0 24 3 3 #") ("
0 0 14 3 10 #"carta-cor?"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 43 #"]                                          "
0 0 17 3 75
(
 #";;carta da mesma cor na m\303\243o"
 #" (pode jogar, especial ou n\303\272mero da mesma cor)"
) 0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       [("
0 0 14 3 13 #"carta-numero?"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 2 #")("
0 0 15 3 4 #"cond"
0 0 24 3 74
(
 #"                                                                    "
 #"      "
) 0 0 17 3 23 #";;carta n\303\272mero na m\303\243o"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 18 #"carta-numero-valor"
0 0 24 3 1 #" "
0 0 14 3 9 #"cartaMesa"
0 0 24 3 3 #") ("
0 0 14 3 18 #"carta-numero-valor"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 35 #"]                                  "
0 0 17 3 51
#";;carta n\303\243o \303\251 da mesma cor, mas tem o mesmo valor"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 94
(
 #"]                                                                   "
 #"                          "
) 0 0 17 3 58
#";;carta n\303\272mero, de valor e cor diferente da carta da mesa"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                          )]"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 2 #") "
0 0 19 3 9 #"\"Compra4\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 47 #"]                                              "
0 0 17 3 72
(
 #";;carta especial Compra4 na m\303\243o (pode jogar com qualquer cart"
 #"a na mesa)"
) 0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"TrocaCor\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 46 #"]                                             "
0 0 17 3 73
(
 #";;carta especial TrocaCor na m\303\243o (pode jogar com qualquer car"
 #"ta na mesa)"
) 0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 93
(
 #"]                                                                   "
 #"                         "
) 0 0 17 3 72
(
 #";;as outras cartas especiai"
 #"s n\303\243o s\303\243o da mesma cor (j\303\241 foi verificado)"
) 0 0 24 29 1 #"\n"
0 0 24 3 25 #"                       )]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 9 #"cartaMesa"
0 0 24 3 2 #") "
0 0 19 3 9 #"\"Compra4\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 62
#"]                                                             "
0 0 17 3 56 #";;carta Compra4 na mesa (qualquer carta pode ser jogada)"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 9 #"cartaMesa"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"TrocaCor\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 61
#"]                                                            "
0 0 17 3 57 #";;carta TrocaCor na mesa (qualquer carta pode ser jogada)"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 9 #"cartaMesa"
0 0 24 3 2 #") "
0 0 19 3 9 #"\"Inverte\""
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 61
#"                                                             "
0 0 17 3 23 #";;carta Inverte na mesa"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                            [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"carta-cor?"
0 0 24 3 1 #" "
0 0 14 3 9 #"cartaMesa"
0 0 24 3 3 #") ("
0 0 14 3 10 #"carta-cor?"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 6 #"]     "
0 0 17 3 40 #";;carta da mesma cor na m\303\243o, pode jogar"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                            [("
0 0 14 3 13 #"carta-numero?"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 36 #"]                                   "
0 0 17 3 65
(
 #";;carta da m\303\243o \303\251 numero"
 #" e n\303\243o \303\251 da mesma cor, n\303\243o pode jogar"
) 0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                            [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 2 #") "
0 0 19 3 9 #"\"Inverte\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 10 #"]         "
0 0 17 3 51
#";;carta da m\303\243o \303\251 Inverte de outra cor, pode jogar"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                            [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 2 #") "
0 0 19 3 9 #"\"Compra4\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 10 #"]         "
0 0 17 3 72
(
 #";;carta especial Compra4 na m\303\243o (pode jogar com qualquer cart"
 #"a na mesa)"
) 0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                            [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"TrocaCor\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 9 #"]        "
0 0 17 3 73
(
 #";;carta especial TrocaCor na m\303\243o (pode jogar com qualquer car"
 #"ta na mesa)"
) 0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                            )]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 9 #"cartaMesa"
0 0 24 3 2 #") "
0 0 19 3 9 #"\"PulaVez\""
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 61
#"                                                             "
0 0 17 3 23 #";;carta PulaVez na mesa"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                            [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"carta-cor?"
0 0 24 3 1 #" "
0 0 14 3 9 #"cartaMesa"
0 0 24 3 3 #") ("
0 0 14 3 10 #"carta-cor?"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 6 #"]     "
0 0 17 3 40 #";;carta da mesma cor na m\303\243o, pode jogar"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                            [("
0 0 14 3 13 #"carta-numero?"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 36 #"]                                   "
0 0 17 3 65
(
 #";;carta da m\303\243o \303\251 numero"
 #" e n\303\243o \303\251 da mesma cor, n\303\243o pode jogar"
) 0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                            [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 2 #") "
0 0 19 3 9 #"\"PulaVez\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 10 #"]         "
0 0 17 3 51
#";;carta da m\303\243o \303\251 PulaVez de outra cor, pode jogar"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                            [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 2 #") "
0 0 19 3 9 #"\"Compra4\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 10 #"]         "
0 0 17 3 72
(
 #";;carta especial Compra4 na m\303\243o (pode jogar com qualquer cart"
 #"a na mesa)"
) 0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                            [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"TrocaCor\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 9 #"]        "
0 0 17 3 73
(
 #";;carta especial TrocaCor na m\303\243o (pode jogar com qualquer car"
 #"ta na mesa)"
) 0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                            )]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 9 #"cartaMesa"
0 0 24 3 2 #") "
0 0 19 3 9 #"\"Compra2\""
0 0 24 3 3 #") ("
0 0 15 3 4 #"cond"
0 0 24 3 61
#"                                                             "
0 0 17 3 23 #";;carta Compra2 na mesa"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                            [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 10 #"carta-cor?"
0 0 24 3 1 #" "
0 0 14 3 9 #"cartaMesa"
0 0 24 3 3 #") ("
0 0 14 3 10 #"carta-cor?"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 6 #"]     "
0 0 17 3 40 #";;carta da mesma cor na m\303\243o, pode jogar"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                            [("
0 0 14 3 13 #"carta-numero?"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 36 #"]                                   "
0 0 17 3 65
(
 #";;carta da m\303\243o \303\251 numero"
 #" e n\303\243o \303\251 da mesma cor, n\303\243o pode jogar"
) 0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                            [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 2 #") "
0 0 19 3 9 #"\"Compra2\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 10 #"]         "
0 0 17 3 51
#";;carta da m\303\243o \303\251 Compra2 de outra cor, pode jogar"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                            [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 2 #") "
0 0 19 3 9 #"\"Compra4\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 10 #"]         "
0 0 17 3 72
(
 #";;carta especial Compra4 na m\303\243o (pode jogar com qualquer cart"
 #"a na mesa)"
) 0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                            [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"carta-especial-tipo"
0 0 24 3 1 #" "
0 0 14 3 8 #"cartaMao"
0 0 24 3 2 #") "
0 0 19 3 10 #"\"TrocaCor\""
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 9 #"]        "
0 0 17 3 73
(
 #";;carta especial TrocaCor na m\303\243o (pode jogar com qualquer car"
 #"ta na mesa)"
) 0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                            )]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"pode-jogar?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"make-carta-numero"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"vermelho\""
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #") "
0 0 14 3 10 #"UmVermelho"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"pode-jogar?"
0 0 24 3 1 #" "
0 0 14 3 7 #"Compra4"
0 0 24 3 1 #" "
0 0 14 3 10 #"UmVermelho"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"pode-jogar?"
0 0 24 3 1 #" "
0 0 14 3 8 #"TrocaCor"
0 0 24 3 1 #" "
0 0 14 3 10 #"UmVermelho"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"pode-jogar?"
0 0 24 3 1 #" "
0 0 14 3 10 #"UmVermelho"
0 0 24 3 1 #" "
0 0 14 3 9 #"TresVerde"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"pode-jogar?"
0 0 24 3 1 #" "
0 0 14 3 11 #"Compra2Azul"
0 0 24 3 1 #" "
0 0 14 3 10 #"UmVermelho"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"pode-jogar?"
0 0 24 3 1 #" "
0 0 14 3 11 #"Compra2Azul"
0 0 24 3 1 #" "
0 0 14 3 8 #"NoveAzul"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"pode-jogar?"
0 0 24 3 1 #" "
0 0 14 3 11 #"Compra2Azul"
0 0 24 3 1 #" "
0 0 14 3 12 #"InverteVerde"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; ================================================================="
 #"======="
) 0 0 24 29 1 #"\n"
0 0 17 3 44 #";;                                QUEST\303\203O 6"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; Defina o tipo de dado M\303\243o, que pode ter at\303\251 5 carta"
 #"s. Cada posi\303\247\303\243o da m\303\243o"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; pode conter uma carta ou estar livre. Portanto, deve-se definir u"
 #"m tipo"
) 0 0 24 29 1 #"\n"
0 0 17 3 64
(
 #";; misto para representar o conte\303\272do de cada posi\303\247\303"
 #"\243o da m\303\243o."
) 0 0 24 29 1 #"\n"
0 0 17 3 36 #";; Defina 2 constantes do tipo M\303\243o."
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; ================================================================="
 #"========"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; -----------------"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; TIPO mao:"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; -----------------"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 2 #" ("
0 0 14 3 8 #"posicao1"
0 0 24 3 1 #" "
0 0 14 3 8 #"posicao2"
0 0 24 3 1 #" "
0 0 14 3 8 #"posicao3"
0 0 24 3 1 #" "
0 0 14 3 8 #"posicao4"
0 0 24 3 1 #" "
0 0 14 3 8 #"posicao5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; Um elemento do conjunto mao \303\251"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;   (make-mao a b c d e)     onde"
0 0 24 29 1 #"\n"
0 0 17 3 63
(
 #";;   a : cartaOUvazio, \303\251 uma carta, podendo ser carta ou vazi"
 #"o"
) 0 0 24 29 1 #"\n"
0 0 17 3 63
(
 #";;   b : cartaOUvazio, \303\251 uma carta, podendo ser carta ou vazi"
 #"o"
) 0 0 24 29 1 #"\n"
0 0 17 3 63
(
 #";;   c : cartaOUvazio, \303\251 uma carta, podendo ser carta ou vazi"
 #"o"
) 0 0 24 29 1 #"\n"
0 0 17 3 63
(
 #";;   d : cartaOUvazio, \303\251 uma carta, podendo ser carta ou vazi"
 #"o"
) 0 0 24 29 1 #"\n"
0 0 17 3 63
(
 #";;   e : cartaOUvazio, \303\251 uma carta, podendo ser carta ou vazi"
 #"o"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";; cartaOUvazio \303\251 definido como a uni\303\243o dos conjuntos "
 #"carta e vazio. Como j\303\241 visto"
) 0 0 24 29 1 #"\n"
0 0 17 3 86
(
 #";; carta tamb\303\251m \303\251 uma uni\303\243o de conjuntos, poden"
 #"do ser do conjunto carta-especial ou"
) 0 0 24 29 1 #"\n"
0 0 17 3 55
#";; carta-numero. Vazio ser\303\241 representado pelo numero 0"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Exemplos de constantes do tipo MAO:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"Mao1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-mao"
0 0 24 3 1 #" "
0 0 14 3 7 #"Compra4"
0 0 24 3 1 #" "
0 0 14 3 11 #"Compra2Azul"
0 0 24 3 1 #" "
0 0 14 3 10 #"UmVermelho"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"Mao2"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-mao"
0 0 24 3 1 #" "
0 0 14 3 12 #"InverteVerde"
0 0 24 3 1 #" "
0 0 14 3 8 #"TrocaCor"
0 0 24 3 1 #" "
0 0 14 3 8 #"NoveAzul"
0 0 24 3 1 #" "
0 0 14 3 9 #"TresVerde"
0 0 24 3 1 #" "
0 0 14 3 11 #"ZeroAmarelo"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; ================================================================="
 #"======="
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";;                                 QUEST\303\203O 7"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; Desenvolva uma fun\303\247\303\243o que, dada uma m\303\243o com "
 #"ao menos uma posi\303\247\303\243o livre e"
) 0 0 24 29 1 #"\n"
0 0 17 3 51
#";; uma carta, insere esta carta na posi\303\247\303\243o livre."
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; ================================================================="
 #"========"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; insere-carta-m\303\243o : mao carta -> mao"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; Obj: Dado uma m\303\243o e uma carta, insere a carta na m\303\243"
 #"o se esta tiver ao menos"
) 0 0 24 29 1 #"\n"
0 0 17 3 22 #";; uma posi\303\247\303\243o livre"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"insere-carta-m\303\243o"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 13 #"carta-numero?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mao-posicao1"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 4 #")) ("
0 0 14 3 15 #"carta-especial?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mao-posicao1"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 6 #")))) ("
0 0 14 3 8 #"make-mao"
0 0 24 3 1 #" "
0 0 14 3 5 #"carta"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mao-posicao2"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 3 #") ("
0 0 14 3 12 #"mao-posicao3"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 3 #") ("
0 0 14 3 12 #"mao-posicao4"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 3 #") ("
0 0 14 3 12 #"mao-posicao5"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 13 #"carta-numero?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mao-posicao2"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 4 #")) ("
0 0 14 3 15 #"carta-especial?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mao-posicao2"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 6 #")))) ("
0 0 14 3 8 #"make-mao"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mao-posicao1"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 2 #") "
0 0 14 3 5 #"carta"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mao-posicao3"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 3 #") ("
0 0 14 3 12 #"mao-posicao4"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 3 #") ("
0 0 14 3 12 #"mao-posicao5"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 13 #"carta-numero?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mao-posicao3"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 4 #")) ("
0 0 14 3 15 #"carta-especial?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mao-posicao3"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 6 #")))) ("
0 0 14 3 8 #"make-mao"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mao-posicao1"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 3 #") ("
0 0 14 3 12 #"mao-posicao2"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 2 #") "
0 0 14 3 5 #"carta"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mao-posicao4"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 3 #") ("
0 0 14 3 12 #"mao-posicao5"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 13 #"carta-numero?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mao-posicao4"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 4 #")) ("
0 0 14 3 15 #"carta-especial?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mao-posicao4"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 6 #")))) ("
0 0 14 3 8 #"make-mao"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mao-posicao1"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 3 #") ("
0 0 14 3 12 #"mao-posicao2"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 3 #") ("
0 0 14 3 12 #"mao-posicao3"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 2 #") "
0 0 14 3 5 #"carta"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mao-posicao5"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 13 #"carta-numero?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mao-posicao5"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 4 #")) ("
0 0 14 3 15 #"carta-especial?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mao-posicao5"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 6 #")))) ("
0 0 14 3 8 #"make-mao"
0 0 24 3 2 #" ("
0 0 14 3 12 #"mao-posicao1"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 3 #") ("
0 0 14 3 12 #"mao-posicao2"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 3 #") ("
0 0 14 3 12 #"mao-posicao3"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 3 #") ("
0 0 14 3 12 #"mao-posicao4"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 2 #") "
0 0 14 3 5 #"carta"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 3 #"mao"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"insere-carta-m\303\243o"
0 0 24 3 1 #" "
0 0 14 3 4 #"Mao1"
0 0 24 3 1 #" "
0 0 14 3 11 #"ZeroAmarelo"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-mao"
0 0 24 3 2 #" ("
0 0 14 3 19 #"make-carta-especial"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"qualquer\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Compra4\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 19 #"make-carta-especial"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"azul\""
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Compra2\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 17 #"make-carta-numero"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"vermelho\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 17 #"make-carta-numero"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"amarelo\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 60
#"                                                            "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"insere-carta-m\303\243o"
0 0 24 3 1 #" "
0 0 14 3 4 #"Mao2"
0 0 24 3 1 #" "
0 0 14 3 11 #"ZeroAmarelo"
0 0 24 3 2 #") "
0 0 14 3 4 #"Mao2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; ================================================================="
 #"======="
) 0 0 24 29 1 #"\n"
0 0 17 3 55
#";;                                 QUEST\303\203O 8 (DESAFIO)"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; Desenvolva uma fun\303\247\303\243o que, dada uma m\303\243o e um"
 #"a carta, a carta da mesa,"
) 0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; gera uma imagem mostrando a m\303\243o, a carta da mesa e a carta"
 #" selecinada"
) 0 0 24 29 1 #"\n"
0 0 17 3 82
(
 #";; para jogar, caso haja uma carta para jogar. Se n\303\243o for pos"
 #"s\303\255vel jogar nenhuma"
) 0 0 24 29 1 #"\n"
0 0 17 3 86
(
 #";; carta da m\303\243o, a sa\303\255d"
 #"a deve ser a imagem da m\303\243o, da carta da mesa e uma mensagem."
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; Dica: decomponha o problema em problemas menores e construa a sol"
 #"u\303\247\303\243o"
) 0 0 24 29 1 #"\n"
0 0 17 3 65
(
 #";; atrav\303\251s da composi\303\247\303"
 #"\243o das solu\303\247\303\265es dos problemas menores."
) 0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; ================================================================="
 #"========"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; mostra-jogada : ... -> ..."
0 0 24 29 1 #"\n"
0           0
